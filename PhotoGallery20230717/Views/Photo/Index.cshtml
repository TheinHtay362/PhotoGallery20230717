@model IEnumerable<PhotoGallery20230717.Models.PhotoModel>

@{
    Layout = "_AdminLteLayout";
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a class="btn btn-sm btn-primary" asp-action="Create">Upload</a>
</p>

<div id="loader" style="position: fixed; left: 0; top: 0; width: 100%; height: 100%; background-color: #f3f3f3; z-index: 10000;">
    <div style="position: absolute; left: 50%; top: 50%; transform: translate(-50%, -50%);">Loading...</div>
</div>

<style>
    body {
        position: relative;
    }
    .photo-card {
        display: none;
    }
</style>



<div class="row" id="photoContainer">
    @foreach (var item in Model)
    {
        <div class="col-md-4 photo-card">
            <div class="card mb-4">
                <img class="card-img-top img-thumbnail" src="data:image/png;base64,@Convert.ToBase64String(item.ImageData)" alt="Card image cap" style="height:200px">
                <div class="card-body">
                    <h5 class="card-title">@item.Caption</h5>
                    <p class="card-text">@item.UploadedOn.ToShortDateString()</p>
                    <a href="@Url.Action("Details", "Photo", new { id = item.Id })" class="btn btn-sm btn-primary">View Details</a>
                    <button type="button" class="btn btn-sm btn-danger" onclick="deleteItem(@item.Id)">Delete</button>
                </div>
            </div>
        </div>
    }
</div>
@*
<div id="pagination">
    <label for="count-dropdown">Show:</label>
    <select id="count-dropdown" class="form-control">
        <option value="3">3</option>
        <option value="6">6</option>
        <option value="9">9</option>
    </select>
    <button id="prev-btn" class="btn btn-sm btn-primary">Previous</button>
    <span id="page-count"></span>
    <button id="next-btn" class="btn btn-sm btn-primary">Next</button>
</div>
*@

<div id="pagination" style="display: flex; align-items: center; justify-content: space-between;">
    <div style="display: flex; align-items: center;">
        <label for="count-dropdown" style="margin-right: 10px;">Show:</label>
        <select id="count-dropdown" class="form-control" style="width: auto;">
            <option value="3">3</option>
            <option value="6">6</option>
            <option value="9">9</option>
        </select>
    </div>
    <div>
        <button id="prev-btn" class="btn btn-sm btn-primary"><i class="fas fa-chevron-left"></i></button>
        <span id="page-count" style="margin: 0 10px;"></span>
        <button id="next-btn" class="btn btn-sm btn-primary"><i class="fas fa-chevron-right"></i></button>
    </div>
</div>


@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script>
    var currentPage = 1;
    var itemsPerPage = parseInt($('#count-dropdown').val()); // Get initial value from dropdown

    function updatePagination() {
        var totalItems = $('.photo-card').length;
        var totalPages = Math.ceil(totalItems / itemsPerPage);

        $('.photo-card').hide();
        $('.photo-card').slice((currentPage - 1) * itemsPerPage, currentPage * itemsPerPage).show();

        // Handle buttons enable/disable
        $('#prev-btn').prop('disabled', false);
        $('#next-btn').prop('disabled', false);

        if (currentPage == 1) {
            $('#prev-btn').prop('disabled', true);
        }

        if (currentPage == totalPages) {
            $('#next-btn').prop('disabled', true);
        }

        // Show current page and total pages
        $('#page-count').text('Page ' + currentPage + ' of ' + totalPages);
    }
    //$(document).ready(function () $(window).on("load", function()
    $(document).ready(function (){
        updatePagination();

        $('#prev-btn').click(function() {
            if (!$(this).prop('disabled')) {
                currentPage--;
                updatePagination();
            }
        });

        $('#next-btn').click(function() {
            if (!$(this).prop('disabled')) {
                currentPage++;
                updatePagination();
            }
        });

        $('#count-dropdown').change(function() {
            itemsPerPage = parseInt($(this).val()); // Update items per page when dropdown changes
            currentPage = 1; // Reset current page
            updatePagination();
        });

        $('#loader').hide(); // Hide loader
    });

    function deleteItem(id) {
        $.ajax({
            url: '/Photo/Delete',
            type: 'POST',
            data: { id: id },
            success: function (data) {
                    console.log(data);
                    if (data.respCode == "000") {
                        SuccessMessageBoxWithLink(data.respMsg, '/Photo/Index', 'Success');
                    } else if (data.respCode == "999") {
                        ErrorMessageBox('Photo Create is Fail');
                    }else if (data.respCode == "777") {
                        DeleteMessageWithLink(data.respMsg, '/Access/Login', 'Error');
                    }
                },
                error: function (xhr, status, error) {
                    console.log(xhr.responseText); // Log the detailed error message for debugging
                }
        });
    }
</script>


}
